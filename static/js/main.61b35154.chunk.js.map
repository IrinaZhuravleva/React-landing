{"version":3,"sources":["ocean.jpeg","Components/Navbar.js","Components/Footer.js","Components/Slider.js","Components/Jumbotron.js","Home.js","About.js","Users.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","NaviBar","useState","show","setShow","handleShow","Navbar","collapseOnSelect","expand","bg","variant","fixed","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","to","Button","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","Text","Check","label","Footer","fluid","style","backgroundColor","color","display","justifyContent","padding","Slider","Carousel","Item","height","src","ocean","alt","Caption","Jumbotron","Home","paddingTop","paddingBottom","Row","Col","Card","width","margin","Img","marginBottom","md","overflow","About","Users","Table","striped","bordered","hover","colSpan","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61b35154.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ocean.4c52b3f8.jpeg\";","import React, { useState } from 'react';\nimport { Navbar, Nav, Button, Container, Modal, Form } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Styles = styled.div `\n    a, .navbar-brand, .navbar-nav .nav-link {\n      color: #adb1b8;\n      &:hover {\n          color: white;\n          text-decoration: none;\n          transition: color .2s ease-in;\n      }      \n    }\n`;\n\nexport function NaviBar() {\n\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n      <>\n        <Styles>\n          <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\n            <Container>\n              <Navbar.Brand>Web Blog</Navbar.Brand>\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"></Navbar.Toggle>\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                  <Nav.Link>\n                    <Link to=\"/\">Home</Link>\n                  </Nav.Link>\n                  <Nav.Link>\n                    <Link to=\"/users\">Users</Link>\n                  </Nav.Link>\n                  <Nav.Link>\n                    <Link to=\"/about\">About</Link>\n                  </Nav.Link>\n                </Nav>\n                <Nav>\n                  <Button\n                    variant=\"primary\"\n                    className=\"mr-2\"\n                    onClick={handleShow}\n                  >\n                    Log In\n                  </Button>\n                  <Button variant=\"primary\" onClick={handleShow}>\n                    Sign Out\n                  </Button>\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </Styles>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Log In</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"fromBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                Email address\n                <Form.Text className=\"text-muted\">Email address</Form.Text>\n              </Form.Group>\n              <Form.Group controlId=\"fromBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"fromBasicCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Remember me\"></Form.Check>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n}","import React from 'react';\nimport { Container } from 'react-bootstrap';\n// import ocean from '../ocean.jpeg';\n// import styled from 'styled-components';\n\nexport const Footer = () => (\n    <Container fluid style={{backgroundColor: '#212529', color: '#fff'}}>\n        <Container style={{display: 'flex', justifyContent: 'center', padding: '10px'}}>\n            <p>Web Dev Blog</p>\n        </Container>\n\n    </Container>\n)","import React from 'react';\nimport { Carousel } from \"react-bootstrap\";\nimport ocean from '../ocean.jpeg';\n\n\nexport function Slider () {\n    return (\n      <Carousel>\n        <Carousel.Item style={{ height: \"600px\" }}>\n          <img className=\"d-block w-100\" src={ocean} alt=\"fisrt-slide\"></img>\n          <Carousel.Caption>\n            <h1>Web Dev Blog</h1>\n            <p>Dod od nostrud est aliquea.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item style={{ height: \"600px\" }}>\n          <img className=\"d-block w-100\" src={ocean} alt=\"fisrt-slide\"></img>\n          <Carousel.Caption>\n            <h1>Web Dev Blog</h1>\n            <p>Dod od nostrud est aliquea.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item style={{ height: \"600px\" }}>\n          <img className=\"d-block w-100\" src={ocean} alt=\"fisrt-slide\"></img>\n          <Carousel.Caption>\n            <h1>Web Dev Blog</h1>\n            <p>Dod od nostrud est aliquea.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n    );\n}","import React from 'react';\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\nimport ocean from '../ocean.jpeg';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .jumbo {\n        background: url(${ocean}) no-repeat fixed bottom;\n        background-size: cover;\n        color: #efefef;\n        height: 400px;\n        position: relative;\n        z-index: -2;\n    }\n    .overlay {\n        background-color: #000;\n        opacity: 0.5;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n    }\n`;\n\nexport const Jumbotron = () => (\n    <Styles>\n        <Jumbo fluid className=\"jumbo\">\n            <div className=\"overlay\"></div>\n            <Container>\n                <h1>Web Dev</h1>\n                <p>Funny nothing complete nor working here (IE nor node.js). \n                    Answer on similar question, a bit structured JSON (suppose no need to copy it again), \n                    also demo snippet included. JSON To CSV conversion (JavaScript) : How to properly \n                    format CSV conversion Hope not only single type convertor, also on my Github (mentioned in profile) \n                    is similar used to analyze unknow JSON structure. I am author of code in this answer and all code\n                    on my Github (except some projects started as fork/+translation).\n\n                </p>\n            </Container>\n        \n        </Jumbo>\n    </Styles>\n)\n\nexport default Jumbotron;","import React from \"react\";\nimport { Slider } from \"./Components/Slider\";\nimport { Jumbotron } from \"./Components/Jumbotron\";\nimport { Container, Row, Col, Card, Button } from \"react-bootstrap\";\nimport ocean from './ocean.jpeg';\n\nexport const Home = () => (\n     <>\n        <Slider></Slider>\n        <Container style={{paddingTop: '2rem', paddingBottom: '2rem'}}>\n            <Row>\n                <Col>\n                    <Card style={{width: '18rem', margin: 'auto'}}>\n                        <Card.Img variant=\"top\" src={ocean} />\n                        <Card.Body>\n                            <Card.Title>Web Blog</Card.Title>\n                            <Card.Text>Web Blog import ocean from '../ocean.jpeg';</Card.Text>\n                            <Button variant=\"primary\">Learn more</Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card style={{width: '18rem', margin: 'auto'}}>\n                        <Card.Img variant=\"top\" src={ocean} />\n                        <Card.Body>\n                            <Card.Title>Web Blog</Card.Title>\n                            <Card.Text>Web Blog import ocean from '../ocean.jpeg';</Card.Text>\n                            <Button variant=\"primary\">Learn more</Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card style={{width: '18rem', margin: 'auto'}}>\n                        <Card.Img variant=\"top\" src={ocean} />\n                        <Card.Body>\n                            <Card.Title>Web Blog</Card.Title>\n                            <Card.Text>Web Blog import ocean from '../ocean.jpeg';</Card.Text>\n                            <Button variant=\"primary\">Learn more</Button>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            \n            </Row>\n        </Container>\n        <Jumbotron></Jumbotron>\n        <Container style={{ marginBottom: '30px' }}>\n            <Row>\n                <Col md={7} style={{ overflow: 'hidden' }}>\n                    <img src={ocean} height={400} />\n                </Col>\n                <Col md={5}>\n                    <h2>Web Dev Blog</h2>\n                    <p>Funny nothing complete nor working here (IE nor node.js). \n                        Answer on similar question, a bit structured JSON (suppose no need to copy it again), \n                        also demo snippet included. JSON To CSV conversion (JavaScript) : How to properly \n                        format CSV conversion Hope not only single type convertor, also on my Github (mentioned in profile) \n                        is similar used to analyze unknow JSON structure. I am author of code in this answer and all code\n                        on my Github (except some projects started as fork/+translation).\n\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n     </>\n);","import React from \"react\";\nimport { Jumbotron } from \"./Components/Jumbotron\";\nimport { Container } from \"react-bootstrap\";\n\nexport const About = () => (\n    <>   \n        <Container>\n            <h1>About</h1>\n        </Container>\n        <Jumbotron />\n    </>\n);","import React from \"react\";\nimport { Table, Container } from 'react-bootstrap';\n\n\nexport const Users = () => (\n    <Container>\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>#</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Username</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                <td>1</td>\n                <td>Mark</td>\n                <td>Otto</td>\n                <td>@mdo</td>\n                </tr>\n                <tr>\n                <td>2</td>\n                <td>Jacob</td>\n                <td>Thornton</td>\n                <td>@fat</td>\n                </tr>\n                <tr>\n                <td>3</td>\n                <td colSpan=\"2\">Larry the Bird</td>\n                <td>@twitter</td>\n                </tr>\n            </tbody>\n        </Table>\n    </Container>\n);","// https://www.youtube.com/watch?v=d3nTC_BrkXw\n// https://react-bootstrap.github.io/getting-started/introduction/\n\nimport React from 'react';\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NaviBar } from './Components/Navbar';\nimport { Footer } from './Components/Footer';\nimport { Home } from \"./Home\";\nimport { About } from \"./About\";\nimport { Users } from \"./Users\";\n// import { Router } from './Components/Navbar';\nimport './App.css';\n\nfunction App() {\n  return (\n  \n    <>\n    <div>\n      <Router>\n        <NaviBar></NaviBar>\n        <Switch>\n          <Route exact path=\"/\" component={Home}></Route>\n          <Route path=\"/users\" component={Users}></Route>\n          <Route path=\"/about\" component={About}></Route>\n        </Switch>\n      </Router>\n    </div>\n    <Footer></Footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}